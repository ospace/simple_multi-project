##################################################################################################
# Validation
# How to make validation message: validation.{Error code}... = {validation message}
# validation Message

validation.AssertFalse = must be false
validation.AssertTrue  = must be true
validation.DecimalMax  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
validation.DecimalMin  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
validation.Digits      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
validation.Future      = must be in the future
validation.Max         = must be less than or equal to {value}
validation.Min         = must be greater than or equal to {value}
validation.NotNull     = may not be null
validation.Null        = must be null
validation.Past        = must be in the past   
validation.Pattern     = must match "{regexp}"
validation.Size        = size must be between {min} and {max}

validation.CreditCardNumber        = invalid credit card number
validation.EAN                     = invalid {type} barcode
validation.Email                   = not a well-formed email address
validation.Length                  = length must be between {min} and {max}
validation.LuhnCheck               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
validation.Mod10Check              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
validation.Mod11Check              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
validation.ModCheck                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
validation.NotBlank                = may not be empty
validation.NotEmpty                = may not be empty
validation.ParametersScriptAssert  = script expression "{script}" didn't evaluate to true
validation.Range                   = must be between {min} and {max}
validation.SafeHtml                = may have unsafe html content
validation.ScriptAssert            = script expression "{script}" didn't evaluate to true
validation.URL                     = must be a valid URL
